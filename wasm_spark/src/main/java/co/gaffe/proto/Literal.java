// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: literal.proto

// Protobuf Java Version: 4.26.1
package co.gaffe.proto;

/**
 * Protobuf type {@code co.gaffe.proto.Literal}
 */
public  final class Literal extends
    com.google.protobuf.GeneratedMessageLite<
        Literal, Literal.Builder> implements
    // @@protoc_insertion_point(message_implements:co.gaffe.proto.Literal)
    LiteralOrBuilder {
  private Literal() {
  }
  public interface DecimalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:co.gaffe.proto.Literal.Decimal)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * the string representation.
     * </pre>
     *
     * <code>string value = 1;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <pre>
     * the string representation.
     * </pre>
     *
     * <code>string value = 1;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <pre>
     * The maximum number of digits allowed in the value.
     * the maximum precision is 38.
     * </pre>
     *
     * <code>optional int32 precision = 2;</code>
     * @return Whether the precision field is set.
     */
    boolean hasPrecision();
    /**
     * <pre>
     * The maximum number of digits allowed in the value.
     * the maximum precision is 38.
     * </pre>
     *
     * <code>optional int32 precision = 2;</code>
     * @return The precision.
     */
    int getPrecision();

    /**
     * <pre>
     * declared scale of decimal literal
     * </pre>
     *
     * <code>optional int32 scale = 3;</code>
     * @return Whether the scale field is set.
     */
    boolean hasScale();
    /**
     * <pre>
     * declared scale of decimal literal
     * </pre>
     *
     * <code>optional int32 scale = 3;</code>
     * @return The scale.
     */
    int getScale();
  }
  /**
   * Protobuf type {@code co.gaffe.proto.Literal.Decimal}
   */
  public  static final class Decimal extends
      com.google.protobuf.GeneratedMessageLite<
          Decimal, Decimal.Builder> implements
      // @@protoc_insertion_point(message_implements:co.gaffe.proto.Literal.Decimal)
      DecimalOrBuilder {
    private Decimal() {
      value_ = "";
    }
    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.lang.String value_;
    /**
     * <pre>
     * the string representation.
     * </pre>
     *
     * <code>string value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      return value_;
    }
    /**
     * <pre>
     * the string representation.
     * </pre>
     *
     * <code>string value = 1;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(value_);
    }
    /**
     * <pre>
     * the string representation.
     * </pre>
     *
     * <code>string value = 1;</code>
     * @param value The value to set.
     */
    private void setValue(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      value_ = value;
    }
    /**
     * <pre>
     * the string representation.
     * </pre>
     *
     * <code>string value = 1;</code>
     */
    private void clearValue() {

      value_ = getDefaultInstance().getValue();
    }
    /**
     * <pre>
     * the string representation.
     * </pre>
     *
     * <code>string value = 1;</code>
     * @param value The bytes for value to set.
     */
    private void setValueBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      value_ = value.toStringUtf8();

    }

    public static final int PRECISION_FIELD_NUMBER = 2;
    private int precision_;
    /**
     * <pre>
     * The maximum number of digits allowed in the value.
     * the maximum precision is 38.
     * </pre>
     *
     * <code>optional int32 precision = 2;</code>
     * @return Whether the precision field is set.
     */
    @java.lang.Override
    public boolean hasPrecision() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The maximum number of digits allowed in the value.
     * the maximum precision is 38.
     * </pre>
     *
     * <code>optional int32 precision = 2;</code>
     * @return The precision.
     */
    @java.lang.Override
    public int getPrecision() {
      return precision_;
    }
    /**
     * <pre>
     * The maximum number of digits allowed in the value.
     * the maximum precision is 38.
     * </pre>
     *
     * <code>optional int32 precision = 2;</code>
     * @param value The precision to set.
     */
    private void setPrecision(int value) {
      bitField0_ |= 0x00000001;
      precision_ = value;
    }
    /**
     * <pre>
     * The maximum number of digits allowed in the value.
     * the maximum precision is 38.
     * </pre>
     *
     * <code>optional int32 precision = 2;</code>
     */
    private void clearPrecision() {
      bitField0_ = (bitField0_ & ~0x00000001);
      precision_ = 0;
    }

    public static final int SCALE_FIELD_NUMBER = 3;
    private int scale_;
    /**
     * <pre>
     * declared scale of decimal literal
     * </pre>
     *
     * <code>optional int32 scale = 3;</code>
     * @return Whether the scale field is set.
     */
    @java.lang.Override
    public boolean hasScale() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * declared scale of decimal literal
     * </pre>
     *
     * <code>optional int32 scale = 3;</code>
     * @return The scale.
     */
    @java.lang.Override
    public int getScale() {
      return scale_;
    }
    /**
     * <pre>
     * declared scale of decimal literal
     * </pre>
     *
     * <code>optional int32 scale = 3;</code>
     * @param value The scale to set.
     */
    private void setScale(int value) {
      bitField0_ |= 0x00000002;
      scale_ = value;
    }
    /**
     * <pre>
     * declared scale of decimal literal
     * </pre>
     *
     * <code>optional int32 scale = 3;</code>
     */
    private void clearScale() {
      bitField0_ = (bitField0_ & ~0x00000002);
      scale_ = 0;
    }

    public static co.gaffe.proto.Literal.Decimal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static co.gaffe.proto.Literal.Decimal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static co.gaffe.proto.Literal.Decimal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.Decimal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(co.gaffe.proto.Literal.Decimal prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code co.gaffe.proto.Literal.Decimal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          co.gaffe.proto.Literal.Decimal, Builder> implements
        // @@protoc_insertion_point(builder_implements:co.gaffe.proto.Literal.Decimal)
        co.gaffe.proto.Literal.DecimalOrBuilder {
      // Construct using co.gaffe.proto.Literal.Decimal.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * the string representation.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @return The value.
       */
      @java.lang.Override
      public java.lang.String getValue() {
        return instance.getValue();
      }
      /**
       * <pre>
       * the string representation.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @return The bytes for value.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getValueBytes() {
        return instance.getValueBytes();
      }
      /**
       * <pre>
       * the string representation.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <pre>
       * the string representation.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }
      /**
       * <pre>
       * the string representation.
       * </pre>
       *
       * <code>string value = 1;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setValueBytes(value);
        return this;
      }

      /**
       * <pre>
       * The maximum number of digits allowed in the value.
       * the maximum precision is 38.
       * </pre>
       *
       * <code>optional int32 precision = 2;</code>
       * @return Whether the precision field is set.
       */
      @java.lang.Override
      public boolean hasPrecision() {
        return instance.hasPrecision();
      }
      /**
       * <pre>
       * The maximum number of digits allowed in the value.
       * the maximum precision is 38.
       * </pre>
       *
       * <code>optional int32 precision = 2;</code>
       * @return The precision.
       */
      @java.lang.Override
      public int getPrecision() {
        return instance.getPrecision();
      }
      /**
       * <pre>
       * The maximum number of digits allowed in the value.
       * the maximum precision is 38.
       * </pre>
       *
       * <code>optional int32 precision = 2;</code>
       * @param value The precision to set.
       * @return This builder for chaining.
       */
      public Builder setPrecision(int value) {
        copyOnWrite();
        instance.setPrecision(value);
        return this;
      }
      /**
       * <pre>
       * The maximum number of digits allowed in the value.
       * the maximum precision is 38.
       * </pre>
       *
       * <code>optional int32 precision = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrecision() {
        copyOnWrite();
        instance.clearPrecision();
        return this;
      }

      /**
       * <pre>
       * declared scale of decimal literal
       * </pre>
       *
       * <code>optional int32 scale = 3;</code>
       * @return Whether the scale field is set.
       */
      @java.lang.Override
      public boolean hasScale() {
        return instance.hasScale();
      }
      /**
       * <pre>
       * declared scale of decimal literal
       * </pre>
       *
       * <code>optional int32 scale = 3;</code>
       * @return The scale.
       */
      @java.lang.Override
      public int getScale() {
        return instance.getScale();
      }
      /**
       * <pre>
       * declared scale of decimal literal
       * </pre>
       *
       * <code>optional int32 scale = 3;</code>
       * @param value The scale to set.
       * @return This builder for chaining.
       */
      public Builder setScale(int value) {
        copyOnWrite();
        instance.setScale(value);
        return this;
      }
      /**
       * <pre>
       * declared scale of decimal literal
       * </pre>
       *
       * <code>optional int32 scale = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScale() {
        copyOnWrite();
        instance.clearScale();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:co.gaffe.proto.Literal.Decimal)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new co.gaffe.proto.Literal.Decimal();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "value_",
              "precision_",
              "scale_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u1004" +
                "\u0000\u0003\u1004\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<co.gaffe.proto.Literal.Decimal> parser = PARSER;
          if (parser == null) {
            synchronized (co.gaffe.proto.Literal.Decimal.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<co.gaffe.proto.Literal.Decimal>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:co.gaffe.proto.Literal.Decimal)
    private static final co.gaffe.proto.Literal.Decimal DEFAULT_INSTANCE;
    static {
      Decimal defaultInstance = new Decimal();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Decimal.class, defaultInstance);
    }

    public static co.gaffe.proto.Literal.Decimal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Decimal> PARSER;

    public static com.google.protobuf.Parser<Decimal> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CalendarIntervalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:co.gaffe.proto.Literal.CalendarInterval)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>int32 months = 1;</code>
     * @return The months.
     */
    int getMonths();

    /**
     * <code>int32 days = 2;</code>
     * @return The days.
     */
    int getDays();

    /**
     * <code>int64 microseconds = 3;</code>
     * @return The microseconds.
     */
    long getMicroseconds();
  }
  /**
   * Protobuf type {@code co.gaffe.proto.Literal.CalendarInterval}
   */
  public  static final class CalendarInterval extends
      com.google.protobuf.GeneratedMessageLite<
          CalendarInterval, CalendarInterval.Builder> implements
      // @@protoc_insertion_point(message_implements:co.gaffe.proto.Literal.CalendarInterval)
      CalendarIntervalOrBuilder {
    private CalendarInterval() {
    }
    public static final int MONTHS_FIELD_NUMBER = 1;
    private int months_;
    /**
     * <code>int32 months = 1;</code>
     * @return The months.
     */
    @java.lang.Override
    public int getMonths() {
      return months_;
    }
    /**
     * <code>int32 months = 1;</code>
     * @param value The months to set.
     */
    private void setMonths(int value) {
      
      months_ = value;
    }
    /**
     * <code>int32 months = 1;</code>
     */
    private void clearMonths() {

      months_ = 0;
    }

    public static final int DAYS_FIELD_NUMBER = 2;
    private int days_;
    /**
     * <code>int32 days = 2;</code>
     * @return The days.
     */
    @java.lang.Override
    public int getDays() {
      return days_;
    }
    /**
     * <code>int32 days = 2;</code>
     * @param value The days to set.
     */
    private void setDays(int value) {
      
      days_ = value;
    }
    /**
     * <code>int32 days = 2;</code>
     */
    private void clearDays() {

      days_ = 0;
    }

    public static final int MICROSECONDS_FIELD_NUMBER = 3;
    private long microseconds_;
    /**
     * <code>int64 microseconds = 3;</code>
     * @return The microseconds.
     */
    @java.lang.Override
    public long getMicroseconds() {
      return microseconds_;
    }
    /**
     * <code>int64 microseconds = 3;</code>
     * @param value The microseconds to set.
     */
    private void setMicroseconds(long value) {
      
      microseconds_ = value;
    }
    /**
     * <code>int64 microseconds = 3;</code>
     */
    private void clearMicroseconds() {

      microseconds_ = 0L;
    }

    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static co.gaffe.proto.Literal.CalendarInterval parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static co.gaffe.proto.Literal.CalendarInterval parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.CalendarInterval parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(co.gaffe.proto.Literal.CalendarInterval prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code co.gaffe.proto.Literal.CalendarInterval}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          co.gaffe.proto.Literal.CalendarInterval, Builder> implements
        // @@protoc_insertion_point(builder_implements:co.gaffe.proto.Literal.CalendarInterval)
        co.gaffe.proto.Literal.CalendarIntervalOrBuilder {
      // Construct using co.gaffe.proto.Literal.CalendarInterval.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>int32 months = 1;</code>
       * @return The months.
       */
      @java.lang.Override
      public int getMonths() {
        return instance.getMonths();
      }
      /**
       * <code>int32 months = 1;</code>
       * @param value The months to set.
       * @return This builder for chaining.
       */
      public Builder setMonths(int value) {
        copyOnWrite();
        instance.setMonths(value);
        return this;
      }
      /**
       * <code>int32 months = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMonths() {
        copyOnWrite();
        instance.clearMonths();
        return this;
      }

      /**
       * <code>int32 days = 2;</code>
       * @return The days.
       */
      @java.lang.Override
      public int getDays() {
        return instance.getDays();
      }
      /**
       * <code>int32 days = 2;</code>
       * @param value The days to set.
       * @return This builder for chaining.
       */
      public Builder setDays(int value) {
        copyOnWrite();
        instance.setDays(value);
        return this;
      }
      /**
       * <code>int32 days = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDays() {
        copyOnWrite();
        instance.clearDays();
        return this;
      }

      /**
       * <code>int64 microseconds = 3;</code>
       * @return The microseconds.
       */
      @java.lang.Override
      public long getMicroseconds() {
        return instance.getMicroseconds();
      }
      /**
       * <code>int64 microseconds = 3;</code>
       * @param value The microseconds to set.
       * @return This builder for chaining.
       */
      public Builder setMicroseconds(long value) {
        copyOnWrite();
        instance.setMicroseconds(value);
        return this;
      }
      /**
       * <code>int64 microseconds = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMicroseconds() {
        copyOnWrite();
        instance.clearMicroseconds();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:co.gaffe.proto.Literal.CalendarInterval)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new co.gaffe.proto.Literal.CalendarInterval();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "months_",
              "days_",
              "microseconds_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0004\u0002\u0004" +
                "\u0003\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<co.gaffe.proto.Literal.CalendarInterval> parser = PARSER;
          if (parser == null) {
            synchronized (co.gaffe.proto.Literal.CalendarInterval.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<co.gaffe.proto.Literal.CalendarInterval>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:co.gaffe.proto.Literal.CalendarInterval)
    private static final co.gaffe.proto.Literal.CalendarInterval DEFAULT_INSTANCE;
    static {
      CalendarInterval defaultInstance = new CalendarInterval();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CalendarInterval.class, defaultInstance);
    }

    public static co.gaffe.proto.Literal.CalendarInterval getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CalendarInterval> PARSER;

    public static com.google.protobuf.Parser<CalendarInterval> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ArrayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:co.gaffe.proto.Literal.Array)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.co.gaffe.proto.DataType element_type = 1;</code>
     * @return Whether the elementType field is set.
     */
    boolean hasElementType();
    /**
     * <code>.co.gaffe.proto.DataType element_type = 1;</code>
     * @return The elementType.
     */
    co.gaffe.proto.DataType getElementType();

    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    java.util.List<co.gaffe.proto.Literal> 
        getElementsList();
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    co.gaffe.proto.Literal getElements(int index);
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    int getElementsCount();
  }
  /**
   * Protobuf type {@code co.gaffe.proto.Literal.Array}
   */
  public  static final class Array extends
      com.google.protobuf.GeneratedMessageLite<
          Array, Array.Builder> implements
      // @@protoc_insertion_point(message_implements:co.gaffe.proto.Literal.Array)
      ArrayOrBuilder {
    private Array() {
      elements_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int ELEMENT_TYPE_FIELD_NUMBER = 1;
    private co.gaffe.proto.DataType elementType_;
    /**
     * <code>.co.gaffe.proto.DataType element_type = 1;</code>
     */
    @java.lang.Override
    public boolean hasElementType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.co.gaffe.proto.DataType element_type = 1;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.DataType getElementType() {
      return elementType_ == null ? co.gaffe.proto.DataType.getDefaultInstance() : elementType_;
    }
    /**
     * <code>.co.gaffe.proto.DataType element_type = 1;</code>
     */
    private void setElementType(co.gaffe.proto.DataType value) {
      value.getClass();
  elementType_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.co.gaffe.proto.DataType element_type = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeElementType(co.gaffe.proto.DataType value) {
      value.getClass();
  if (elementType_ != null &&
          elementType_ != co.gaffe.proto.DataType.getDefaultInstance()) {
        elementType_ =
          co.gaffe.proto.DataType.newBuilder(elementType_).mergeFrom(value).buildPartial();
      } else {
        elementType_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.co.gaffe.proto.DataType element_type = 1;</code>
     */
    private void clearElementType() {  elementType_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int ELEMENTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<co.gaffe.proto.Literal> elements_;
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    @java.lang.Override
    public java.util.List<co.gaffe.proto.Literal> getElementsList() {
      return elements_;
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    public java.util.List<? extends co.gaffe.proto.LiteralOrBuilder> 
        getElementsOrBuilderList() {
      return elements_;
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    @java.lang.Override
    public int getElementsCount() {
      return elements_.size();
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal getElements(int index) {
      return elements_.get(index);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    public co.gaffe.proto.LiteralOrBuilder getElementsOrBuilder(
        int index) {
      return elements_.get(index);
    }
    private void ensureElementsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<co.gaffe.proto.Literal> tmp = elements_;
      if (!tmp.isModifiable()) {
        elements_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void setElements(
        int index, co.gaffe.proto.Literal value) {
      value.getClass();
  ensureElementsIsMutable();
      elements_.set(index, value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void addElements(co.gaffe.proto.Literal value) {
      value.getClass();
  ensureElementsIsMutable();
      elements_.add(value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void addElements(
        int index, co.gaffe.proto.Literal value) {
      value.getClass();
  ensureElementsIsMutable();
      elements_.add(index, value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void addAllElements(
        java.lang.Iterable<? extends co.gaffe.proto.Literal> values) {
      ensureElementsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, elements_);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void clearElements() {
      elements_ = emptyProtobufList();
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void removeElements(int index) {
      ensureElementsIsMutable();
      elements_.remove(index);
    }

    public static co.gaffe.proto.Literal.Array parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static co.gaffe.proto.Literal.Array parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static co.gaffe.proto.Literal.Array parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.Array parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(co.gaffe.proto.Literal.Array prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code co.gaffe.proto.Literal.Array}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          co.gaffe.proto.Literal.Array, Builder> implements
        // @@protoc_insertion_point(builder_implements:co.gaffe.proto.Literal.Array)
        co.gaffe.proto.Literal.ArrayOrBuilder {
      // Construct using co.gaffe.proto.Literal.Array.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.co.gaffe.proto.DataType element_type = 1;</code>
       */
      @java.lang.Override
      public boolean hasElementType() {
        return instance.hasElementType();
      }
      /**
       * <code>.co.gaffe.proto.DataType element_type = 1;</code>
       */
      @java.lang.Override
      public co.gaffe.proto.DataType getElementType() {
        return instance.getElementType();
      }
      /**
       * <code>.co.gaffe.proto.DataType element_type = 1;</code>
       */
      public Builder setElementType(co.gaffe.proto.DataType value) {
        copyOnWrite();
        instance.setElementType(value);
        return this;
        }
      /**
       * <code>.co.gaffe.proto.DataType element_type = 1;</code>
       */
      public Builder setElementType(
          co.gaffe.proto.DataType.Builder builderForValue) {
        copyOnWrite();
        instance.setElementType(builderForValue.build());
        return this;
      }
      /**
       * <code>.co.gaffe.proto.DataType element_type = 1;</code>
       */
      public Builder mergeElementType(co.gaffe.proto.DataType value) {
        copyOnWrite();
        instance.mergeElementType(value);
        return this;
      }
      /**
       * <code>.co.gaffe.proto.DataType element_type = 1;</code>
       */
      public Builder clearElementType() {  copyOnWrite();
        instance.clearElementType();
        return this;
      }

      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      @java.lang.Override
      public java.util.List<co.gaffe.proto.Literal> getElementsList() {
        return java.util.Collections.unmodifiableList(
            instance.getElementsList());
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      @java.lang.Override
      public int getElementsCount() {
        return instance.getElementsCount();
      }/**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      @java.lang.Override
      public co.gaffe.proto.Literal getElements(int index) {
        return instance.getElements(index);
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder setElements(
          int index, co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.setElements(index, value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder setElements(
          int index, co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.setElements(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addElements(co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.addElements(value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addElements(
          int index, co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.addElements(index, value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addElements(
          co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.addElements(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addElements(
          int index, co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.addElements(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addAllElements(
          java.lang.Iterable<? extends co.gaffe.proto.Literal> values) {
        copyOnWrite();
        instance.addAllElements(values);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder clearElements() {
        copyOnWrite();
        instance.clearElements();
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder removeElements(int index) {
        copyOnWrite();
        instance.removeElements(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:co.gaffe.proto.Literal.Array)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new co.gaffe.proto.Literal.Array();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "elementType_",
              "elements_",
              co.gaffe.proto.Literal.class,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u1009\u0000\u0002" +
                "\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<co.gaffe.proto.Literal.Array> parser = PARSER;
          if (parser == null) {
            synchronized (co.gaffe.proto.Literal.Array.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<co.gaffe.proto.Literal.Array>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:co.gaffe.proto.Literal.Array)
    private static final co.gaffe.proto.Literal.Array DEFAULT_INSTANCE;
    static {
      Array defaultInstance = new Array();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Array.class, defaultInstance);
    }

    public static co.gaffe.proto.Literal.Array getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Array> PARSER;

    public static com.google.protobuf.Parser<Array> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:co.gaffe.proto.Literal.Map)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.co.gaffe.proto.DataType key_type = 1;</code>
     * @return Whether the keyType field is set.
     */
    boolean hasKeyType();
    /**
     * <code>.co.gaffe.proto.DataType key_type = 1;</code>
     * @return The keyType.
     */
    co.gaffe.proto.DataType getKeyType();

    /**
     * <code>.co.gaffe.proto.DataType value_type = 2;</code>
     * @return Whether the valueType field is set.
     */
    boolean hasValueType();
    /**
     * <code>.co.gaffe.proto.DataType value_type = 2;</code>
     * @return The valueType.
     */
    co.gaffe.proto.DataType getValueType();

    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    java.util.List<co.gaffe.proto.Literal> 
        getKeysList();
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    co.gaffe.proto.Literal getKeys(int index);
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    int getKeysCount();

    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    java.util.List<co.gaffe.proto.Literal> 
        getValuesList();
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    co.gaffe.proto.Literal getValues(int index);
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    int getValuesCount();
  }
  /**
   * Protobuf type {@code co.gaffe.proto.Literal.Map}
   */
  public  static final class Map extends
      com.google.protobuf.GeneratedMessageLite<
          Map, Map.Builder> implements
      // @@protoc_insertion_point(message_implements:co.gaffe.proto.Literal.Map)
      MapOrBuilder {
    private Map() {
      keys_ = emptyProtobufList();
      values_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int KEY_TYPE_FIELD_NUMBER = 1;
    private co.gaffe.proto.DataType keyType_;
    /**
     * <code>.co.gaffe.proto.DataType key_type = 1;</code>
     */
    @java.lang.Override
    public boolean hasKeyType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.co.gaffe.proto.DataType key_type = 1;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.DataType getKeyType() {
      return keyType_ == null ? co.gaffe.proto.DataType.getDefaultInstance() : keyType_;
    }
    /**
     * <code>.co.gaffe.proto.DataType key_type = 1;</code>
     */
    private void setKeyType(co.gaffe.proto.DataType value) {
      value.getClass();
  keyType_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.co.gaffe.proto.DataType key_type = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeKeyType(co.gaffe.proto.DataType value) {
      value.getClass();
  if (keyType_ != null &&
          keyType_ != co.gaffe.proto.DataType.getDefaultInstance()) {
        keyType_ =
          co.gaffe.proto.DataType.newBuilder(keyType_).mergeFrom(value).buildPartial();
      } else {
        keyType_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.co.gaffe.proto.DataType key_type = 1;</code>
     */
    private void clearKeyType() {  keyType_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int VALUE_TYPE_FIELD_NUMBER = 2;
    private co.gaffe.proto.DataType valueType_;
    /**
     * <code>.co.gaffe.proto.DataType value_type = 2;</code>
     */
    @java.lang.Override
    public boolean hasValueType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.co.gaffe.proto.DataType value_type = 2;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.DataType getValueType() {
      return valueType_ == null ? co.gaffe.proto.DataType.getDefaultInstance() : valueType_;
    }
    /**
     * <code>.co.gaffe.proto.DataType value_type = 2;</code>
     */
    private void setValueType(co.gaffe.proto.DataType value) {
      value.getClass();
  valueType_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>.co.gaffe.proto.DataType value_type = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeValueType(co.gaffe.proto.DataType value) {
      value.getClass();
  if (valueType_ != null &&
          valueType_ != co.gaffe.proto.DataType.getDefaultInstance()) {
        valueType_ =
          co.gaffe.proto.DataType.newBuilder(valueType_).mergeFrom(value).buildPartial();
      } else {
        valueType_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>.co.gaffe.proto.DataType value_type = 2;</code>
     */
    private void clearValueType() {  valueType_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int KEYS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<co.gaffe.proto.Literal> keys_;
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    @java.lang.Override
    public java.util.List<co.gaffe.proto.Literal> getKeysList() {
      return keys_;
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    public java.util.List<? extends co.gaffe.proto.LiteralOrBuilder> 
        getKeysOrBuilderList() {
      return keys_;
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    @java.lang.Override
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    public co.gaffe.proto.LiteralOrBuilder getKeysOrBuilder(
        int index) {
      return keys_.get(index);
    }
    private void ensureKeysIsMutable() {
      com.google.protobuf.Internal.ProtobufList<co.gaffe.proto.Literal> tmp = keys_;
      if (!tmp.isModifiable()) {
        keys_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    private void setKeys(
        int index, co.gaffe.proto.Literal value) {
      value.getClass();
  ensureKeysIsMutable();
      keys_.set(index, value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    private void addKeys(co.gaffe.proto.Literal value) {
      value.getClass();
  ensureKeysIsMutable();
      keys_.add(value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    private void addKeys(
        int index, co.gaffe.proto.Literal value) {
      value.getClass();
  ensureKeysIsMutable();
      keys_.add(index, value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    private void addAllKeys(
        java.lang.Iterable<? extends co.gaffe.proto.Literal> values) {
      ensureKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keys_);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    private void clearKeys() {
      keys_ = emptyProtobufList();
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
     */
    private void removeKeys(int index) {
      ensureKeysIsMutable();
      keys_.remove(index);
    }

    public static final int VALUES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<co.gaffe.proto.Literal> values_;
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    @java.lang.Override
    public java.util.List<co.gaffe.proto.Literal> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    public java.util.List<? extends co.gaffe.proto.LiteralOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    @java.lang.Override
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    public co.gaffe.proto.LiteralOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }
    private void ensureValuesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<co.gaffe.proto.Literal> tmp = values_;
      if (!tmp.isModifiable()) {
        values_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    private void setValues(
        int index, co.gaffe.proto.Literal value) {
      value.getClass();
  ensureValuesIsMutable();
      values_.set(index, value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    private void addValues(co.gaffe.proto.Literal value) {
      value.getClass();
  ensureValuesIsMutable();
      values_.add(value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    private void addValues(
        int index, co.gaffe.proto.Literal value) {
      value.getClass();
  ensureValuesIsMutable();
      values_.add(index, value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    private void addAllValues(
        java.lang.Iterable<? extends co.gaffe.proto.Literal> values) {
      ensureValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, values_);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    private void clearValues() {
      values_ = emptyProtobufList();
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
     */
    private void removeValues(int index) {
      ensureValuesIsMutable();
      values_.remove(index);
    }

    public static co.gaffe.proto.Literal.Map parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static co.gaffe.proto.Literal.Map parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static co.gaffe.proto.Literal.Map parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.Map parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(co.gaffe.proto.Literal.Map prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code co.gaffe.proto.Literal.Map}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          co.gaffe.proto.Literal.Map, Builder> implements
        // @@protoc_insertion_point(builder_implements:co.gaffe.proto.Literal.Map)
        co.gaffe.proto.Literal.MapOrBuilder {
      // Construct using co.gaffe.proto.Literal.Map.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.co.gaffe.proto.DataType key_type = 1;</code>
       */
      @java.lang.Override
      public boolean hasKeyType() {
        return instance.hasKeyType();
      }
      /**
       * <code>.co.gaffe.proto.DataType key_type = 1;</code>
       */
      @java.lang.Override
      public co.gaffe.proto.DataType getKeyType() {
        return instance.getKeyType();
      }
      /**
       * <code>.co.gaffe.proto.DataType key_type = 1;</code>
       */
      public Builder setKeyType(co.gaffe.proto.DataType value) {
        copyOnWrite();
        instance.setKeyType(value);
        return this;
        }
      /**
       * <code>.co.gaffe.proto.DataType key_type = 1;</code>
       */
      public Builder setKeyType(
          co.gaffe.proto.DataType.Builder builderForValue) {
        copyOnWrite();
        instance.setKeyType(builderForValue.build());
        return this;
      }
      /**
       * <code>.co.gaffe.proto.DataType key_type = 1;</code>
       */
      public Builder mergeKeyType(co.gaffe.proto.DataType value) {
        copyOnWrite();
        instance.mergeKeyType(value);
        return this;
      }
      /**
       * <code>.co.gaffe.proto.DataType key_type = 1;</code>
       */
      public Builder clearKeyType() {  copyOnWrite();
        instance.clearKeyType();
        return this;
      }

      /**
       * <code>.co.gaffe.proto.DataType value_type = 2;</code>
       */
      @java.lang.Override
      public boolean hasValueType() {
        return instance.hasValueType();
      }
      /**
       * <code>.co.gaffe.proto.DataType value_type = 2;</code>
       */
      @java.lang.Override
      public co.gaffe.proto.DataType getValueType() {
        return instance.getValueType();
      }
      /**
       * <code>.co.gaffe.proto.DataType value_type = 2;</code>
       */
      public Builder setValueType(co.gaffe.proto.DataType value) {
        copyOnWrite();
        instance.setValueType(value);
        return this;
        }
      /**
       * <code>.co.gaffe.proto.DataType value_type = 2;</code>
       */
      public Builder setValueType(
          co.gaffe.proto.DataType.Builder builderForValue) {
        copyOnWrite();
        instance.setValueType(builderForValue.build());
        return this;
      }
      /**
       * <code>.co.gaffe.proto.DataType value_type = 2;</code>
       */
      public Builder mergeValueType(co.gaffe.proto.DataType value) {
        copyOnWrite();
        instance.mergeValueType(value);
        return this;
      }
      /**
       * <code>.co.gaffe.proto.DataType value_type = 2;</code>
       */
      public Builder clearValueType() {  copyOnWrite();
        instance.clearValueType();
        return this;
      }

      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      @java.lang.Override
      public java.util.List<co.gaffe.proto.Literal> getKeysList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeysList());
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      @java.lang.Override
      public int getKeysCount() {
        return instance.getKeysCount();
      }/**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      @java.lang.Override
      public co.gaffe.proto.Literal getKeys(int index) {
        return instance.getKeys(index);
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder setKeys(
          int index, co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.setKeys(index, value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder setKeys(
          int index, co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.setKeys(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder addKeys(co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.addKeys(value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder addKeys(
          int index, co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.addKeys(index, value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder addKeys(
          co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.addKeys(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder addKeys(
          int index, co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.addKeys(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends co.gaffe.proto.Literal> values) {
        copyOnWrite();
        instance.addAllKeys(values);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder clearKeys() {
        copyOnWrite();
        instance.clearKeys();
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal keys = 3;</code>
       */
      public Builder removeKeys(int index) {
        copyOnWrite();
        instance.removeKeys(index);
        return this;
      }

      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      @java.lang.Override
      public java.util.List<co.gaffe.proto.Literal> getValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getValuesList());
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      @java.lang.Override
      public int getValuesCount() {
        return instance.getValuesCount();
      }/**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      @java.lang.Override
      public co.gaffe.proto.Literal getValues(int index) {
        return instance.getValues(index);
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder setValues(
          int index, co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.setValues(index, value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder setValues(
          int index, co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.setValues(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder addValues(co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.addValues(value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder addValues(
          int index, co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.addValues(index, value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder addValues(
          co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.addValues(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder addValues(
          int index, co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.addValues(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends co.gaffe.proto.Literal> values) {
        copyOnWrite();
        instance.addAllValues(values);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder clearValues() {
        copyOnWrite();
        instance.clearValues();
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal values = 4;</code>
       */
      public Builder removeValues(int index) {
        copyOnWrite();
        instance.removeValues(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:co.gaffe.proto.Literal.Map)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new co.gaffe.proto.Literal.Map();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "keyType_",
              "valueType_",
              "keys_",
              co.gaffe.proto.Literal.class,
              "values_",
              co.gaffe.proto.Literal.class,
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0002\u0000\u0001\u1009\u0000\u0002" +
                "\u1009\u0001\u0003\u001b\u0004\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<co.gaffe.proto.Literal.Map> parser = PARSER;
          if (parser == null) {
            synchronized (co.gaffe.proto.Literal.Map.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<co.gaffe.proto.Literal.Map>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:co.gaffe.proto.Literal.Map)
    private static final co.gaffe.proto.Literal.Map DEFAULT_INSTANCE;
    static {
      Map defaultInstance = new Map();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Map.class, defaultInstance);
    }

    public static co.gaffe.proto.Literal.Map getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Map> PARSER;

    public static com.google.protobuf.Parser<Map> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:co.gaffe.proto.Literal.Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
     * @return Whether the structType field is set.
     */
    boolean hasStructType();
    /**
     * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
     * @return The structType.
     */
    co.gaffe.proto.DataType getStructType();

    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    java.util.List<co.gaffe.proto.Literal> 
        getElementsList();
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    co.gaffe.proto.Literal getElements(int index);
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    int getElementsCount();
  }
  /**
   * Protobuf type {@code co.gaffe.proto.Literal.Struct}
   */
  public  static final class Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Struct, Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:co.gaffe.proto.Literal.Struct)
      StructOrBuilder {
    private Struct() {
      elements_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int STRUCT_TYPE_FIELD_NUMBER = 1;
    private co.gaffe.proto.DataType structType_;
    /**
     * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
     */
    @java.lang.Override
    public boolean hasStructType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.DataType getStructType() {
      return structType_ == null ? co.gaffe.proto.DataType.getDefaultInstance() : structType_;
    }
    /**
     * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
     */
    private void setStructType(co.gaffe.proto.DataType value) {
      value.getClass();
  structType_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStructType(co.gaffe.proto.DataType value) {
      value.getClass();
  if (structType_ != null &&
          structType_ != co.gaffe.proto.DataType.getDefaultInstance()) {
        structType_ =
          co.gaffe.proto.DataType.newBuilder(structType_).mergeFrom(value).buildPartial();
      } else {
        structType_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
     */
    private void clearStructType() {  structType_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int ELEMENTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<co.gaffe.proto.Literal> elements_;
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    @java.lang.Override
    public java.util.List<co.gaffe.proto.Literal> getElementsList() {
      return elements_;
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    public java.util.List<? extends co.gaffe.proto.LiteralOrBuilder> 
        getElementsOrBuilderList() {
      return elements_;
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    @java.lang.Override
    public int getElementsCount() {
      return elements_.size();
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal getElements(int index) {
      return elements_.get(index);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    public co.gaffe.proto.LiteralOrBuilder getElementsOrBuilder(
        int index) {
      return elements_.get(index);
    }
    private void ensureElementsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<co.gaffe.proto.Literal> tmp = elements_;
      if (!tmp.isModifiable()) {
        elements_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void setElements(
        int index, co.gaffe.proto.Literal value) {
      value.getClass();
  ensureElementsIsMutable();
      elements_.set(index, value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void addElements(co.gaffe.proto.Literal value) {
      value.getClass();
  ensureElementsIsMutable();
      elements_.add(value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void addElements(
        int index, co.gaffe.proto.Literal value) {
      value.getClass();
  ensureElementsIsMutable();
      elements_.add(index, value);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void addAllElements(
        java.lang.Iterable<? extends co.gaffe.proto.Literal> values) {
      ensureElementsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, elements_);
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void clearElements() {
      elements_ = emptyProtobufList();
    }
    /**
     * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
     */
    private void removeElements(int index) {
      ensureElementsIsMutable();
      elements_.remove(index);
    }

    public static co.gaffe.proto.Literal.Struct parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static co.gaffe.proto.Literal.Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static co.gaffe.proto.Literal.Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static co.gaffe.proto.Literal.Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(co.gaffe.proto.Literal.Struct prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code co.gaffe.proto.Literal.Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          co.gaffe.proto.Literal.Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:co.gaffe.proto.Literal.Struct)
        co.gaffe.proto.Literal.StructOrBuilder {
      // Construct using co.gaffe.proto.Literal.Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
       */
      @java.lang.Override
      public boolean hasStructType() {
        return instance.hasStructType();
      }
      /**
       * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
       */
      @java.lang.Override
      public co.gaffe.proto.DataType getStructType() {
        return instance.getStructType();
      }
      /**
       * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
       */
      public Builder setStructType(co.gaffe.proto.DataType value) {
        copyOnWrite();
        instance.setStructType(value);
        return this;
        }
      /**
       * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
       */
      public Builder setStructType(
          co.gaffe.proto.DataType.Builder builderForValue) {
        copyOnWrite();
        instance.setStructType(builderForValue.build());
        return this;
      }
      /**
       * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
       */
      public Builder mergeStructType(co.gaffe.proto.DataType value) {
        copyOnWrite();
        instance.mergeStructType(value);
        return this;
      }
      /**
       * <code>.co.gaffe.proto.DataType struct_type = 1;</code>
       */
      public Builder clearStructType() {  copyOnWrite();
        instance.clearStructType();
        return this;
      }

      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      @java.lang.Override
      public java.util.List<co.gaffe.proto.Literal> getElementsList() {
        return java.util.Collections.unmodifiableList(
            instance.getElementsList());
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      @java.lang.Override
      public int getElementsCount() {
        return instance.getElementsCount();
      }/**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      @java.lang.Override
      public co.gaffe.proto.Literal getElements(int index) {
        return instance.getElements(index);
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder setElements(
          int index, co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.setElements(index, value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder setElements(
          int index, co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.setElements(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addElements(co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.addElements(value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addElements(
          int index, co.gaffe.proto.Literal value) {
        copyOnWrite();
        instance.addElements(index, value);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addElements(
          co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.addElements(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addElements(
          int index, co.gaffe.proto.Literal.Builder builderForValue) {
        copyOnWrite();
        instance.addElements(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder addAllElements(
          java.lang.Iterable<? extends co.gaffe.proto.Literal> values) {
        copyOnWrite();
        instance.addAllElements(values);
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder clearElements() {
        copyOnWrite();
        instance.clearElements();
        return this;
      }
      /**
       * <code>repeated .co.gaffe.proto.Literal elements = 2;</code>
       */
      public Builder removeElements(int index) {
        copyOnWrite();
        instance.removeElements(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:co.gaffe.proto.Literal.Struct)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new co.gaffe.proto.Literal.Struct();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "structType_",
              "elements_",
              co.gaffe.proto.Literal.class,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u1009\u0000\u0002" +
                "\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<co.gaffe.proto.Literal.Struct> parser = PARSER;
          if (parser == null) {
            synchronized (co.gaffe.proto.Literal.Struct.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<co.gaffe.proto.Literal.Struct>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:co.gaffe.proto.Literal.Struct)
    private static final co.gaffe.proto.Literal.Struct DEFAULT_INSTANCE;
    static {
      Struct defaultInstance = new Struct();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Struct.class, defaultInstance);
    }

    public static co.gaffe.proto.Literal.Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Struct> PARSER;

    public static com.google.protobuf.Parser<Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int literalTypeCase_ = 0;
  private java.lang.Object literalType_;
  public enum LiteralTypeCase {
    NULL(1),
    BINARY(2),
    BOOLEAN(3),
    BYTE(4),
    SHORT(5),
    INTEGER(6),
    LONG(7),
    FLOAT(10),
    DOUBLE(11),
    DECIMAL(12),
    STRING(13),
    DATE(16),
    TIMESTAMP(17),
    TIMESTAMP_NTZ(18),
    CALENDAR_INTERVAL(19),
    YEAR_MONTH_INTERVAL(20),
    DAY_TIME_INTERVAL(21),
    ARRAY(22),
    MAP(23),
    STRUCT(24),
    LITERALTYPE_NOT_SET(0);
    private final int value;
    private LiteralTypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LiteralTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static LiteralTypeCase forNumber(int value) {
      switch (value) {
        case 1: return NULL;
        case 2: return BINARY;
        case 3: return BOOLEAN;
        case 4: return BYTE;
        case 5: return SHORT;
        case 6: return INTEGER;
        case 7: return LONG;
        case 10: return FLOAT;
        case 11: return DOUBLE;
        case 12: return DECIMAL;
        case 13: return STRING;
        case 16: return DATE;
        case 17: return TIMESTAMP;
        case 18: return TIMESTAMP_NTZ;
        case 19: return CALENDAR_INTERVAL;
        case 20: return YEAR_MONTH_INTERVAL;
        case 21: return DAY_TIME_INTERVAL;
        case 22: return ARRAY;
        case 23: return MAP;
        case 24: return STRUCT;
        case 0: return LITERALTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public LiteralTypeCase
  getLiteralTypeCase() {
    return LiteralTypeCase.forNumber(
        literalTypeCase_);
  }

  private void clearLiteralType() {
    literalTypeCase_ = 0;
    literalType_ = null;
  }

  public static final int NULL_FIELD_NUMBER = 1;
  /**
   * <code>.co.gaffe.proto.DataType null = 1;</code>
   */
  @java.lang.Override
  public boolean hasNull() {
    return literalTypeCase_ == 1;
  }
  /**
   * <code>.co.gaffe.proto.DataType null = 1;</code>
   */
  @java.lang.Override
  public co.gaffe.proto.DataType getNull() {
    if (literalTypeCase_ == 1) {
       return (co.gaffe.proto.DataType) literalType_;
    }
    return co.gaffe.proto.DataType.getDefaultInstance();
  }
  /**
   * <code>.co.gaffe.proto.DataType null = 1;</code>
   */
  private void setNull(co.gaffe.proto.DataType value) {
    value.getClass();
  literalType_ = value;
    literalTypeCase_ = 1;
  }
  /**
   * <code>.co.gaffe.proto.DataType null = 1;</code>
   */
  private void mergeNull(co.gaffe.proto.DataType value) {
    value.getClass();
  if (literalTypeCase_ == 1 &&
        literalType_ != co.gaffe.proto.DataType.getDefaultInstance()) {
      literalType_ = co.gaffe.proto.DataType.newBuilder((co.gaffe.proto.DataType) literalType_)
          .mergeFrom(value).buildPartial();
    } else {
      literalType_ = value;
    }
    literalTypeCase_ = 1;
  }
  /**
   * <code>.co.gaffe.proto.DataType null = 1;</code>
   */
  private void clearNull() {
    if (literalTypeCase_ == 1) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int BINARY_FIELD_NUMBER = 2;
  /**
   * <code>bytes binary = 2;</code>
   * @return Whether the binary field is set.
   */
  @java.lang.Override
  public boolean hasBinary() {
    return literalTypeCase_ == 2;
  }
  /**
   * <code>bytes binary = 2;</code>
   * @return The binary.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getBinary() {
    if (literalTypeCase_ == 2) {
      return (com.google.protobuf.ByteString) literalType_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }
  /**
   * <code>bytes binary = 2;</code>
   * @param value The binary to set.
   */
  private void setBinary(com.google.protobuf.ByteString value) {
    java.lang.Class<?> valueClass = value.getClass();
  literalTypeCase_ = 2;
    literalType_ = value;
  }
  /**
   * <code>bytes binary = 2;</code>
   */
  private void clearBinary() {
    if (literalTypeCase_ == 2) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int BOOLEAN_FIELD_NUMBER = 3;
  /**
   * <code>bool boolean = 3;</code>
   * @return Whether the boolean field is set.
   */
  @java.lang.Override
  public boolean hasBoolean() {
    return literalTypeCase_ == 3;
  }
  /**
   * <code>bool boolean = 3;</code>
   * @return The boolean.
   */
  @java.lang.Override
  public boolean getBoolean() {
    if (literalTypeCase_ == 3) {
      return (java.lang.Boolean) literalType_;
    }
    return false;
  }
  /**
   * <code>bool boolean = 3;</code>
   * @param value The boolean to set.
   */
  private void setBoolean(boolean value) {
    literalTypeCase_ = 3;
    literalType_ = value;
  }
  /**
   * <code>bool boolean = 3;</code>
   */
  private void clearBoolean() {
    if (literalTypeCase_ == 3) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int BYTE_FIELD_NUMBER = 4;
  /**
   * <code>int32 byte = 4;</code>
   * @return Whether the byte field is set.
   */
  @java.lang.Override
  public boolean hasByte() {
    return literalTypeCase_ == 4;
  }
  /**
   * <code>int32 byte = 4;</code>
   * @return The byte.
   */
  @java.lang.Override
  public int getByte() {
    if (literalTypeCase_ == 4) {
      return (java.lang.Integer) literalType_;
    }
    return 0;
  }
  /**
   * <code>int32 byte = 4;</code>
   * @param value The byte to set.
   */
  private void setByte(int value) {
    literalTypeCase_ = 4;
    literalType_ = value;
  }
  /**
   * <code>int32 byte = 4;</code>
   */
  private void clearByte() {
    if (literalTypeCase_ == 4) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int SHORT_FIELD_NUMBER = 5;
  /**
   * <code>int32 short = 5;</code>
   * @return Whether the short field is set.
   */
  @java.lang.Override
  public boolean hasShort() {
    return literalTypeCase_ == 5;
  }
  /**
   * <code>int32 short = 5;</code>
   * @return The short.
   */
  @java.lang.Override
  public int getShort() {
    if (literalTypeCase_ == 5) {
      return (java.lang.Integer) literalType_;
    }
    return 0;
  }
  /**
   * <code>int32 short = 5;</code>
   * @param value The short to set.
   */
  private void setShort(int value) {
    literalTypeCase_ = 5;
    literalType_ = value;
  }
  /**
   * <code>int32 short = 5;</code>
   */
  private void clearShort() {
    if (literalTypeCase_ == 5) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int INTEGER_FIELD_NUMBER = 6;
  /**
   * <code>int32 integer = 6;</code>
   * @return Whether the integer field is set.
   */
  @java.lang.Override
  public boolean hasInteger() {
    return literalTypeCase_ == 6;
  }
  /**
   * <code>int32 integer = 6;</code>
   * @return The integer.
   */
  @java.lang.Override
  public int getInteger() {
    if (literalTypeCase_ == 6) {
      return (java.lang.Integer) literalType_;
    }
    return 0;
  }
  /**
   * <code>int32 integer = 6;</code>
   * @param value The integer to set.
   */
  private void setInteger(int value) {
    literalTypeCase_ = 6;
    literalType_ = value;
  }
  /**
   * <code>int32 integer = 6;</code>
   */
  private void clearInteger() {
    if (literalTypeCase_ == 6) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int LONG_FIELD_NUMBER = 7;
  /**
   * <code>int64 long = 7;</code>
   * @return Whether the long field is set.
   */
  @java.lang.Override
  public boolean hasLong() {
    return literalTypeCase_ == 7;
  }
  /**
   * <code>int64 long = 7;</code>
   * @return The long.
   */
  @java.lang.Override
  public long getLong() {
    if (literalTypeCase_ == 7) {
      return (java.lang.Long) literalType_;
    }
    return 0L;
  }
  /**
   * <code>int64 long = 7;</code>
   * @param value The long to set.
   */
  private void setLong(long value) {
    literalTypeCase_ = 7;
    literalType_ = value;
  }
  /**
   * <code>int64 long = 7;</code>
   */
  private void clearLong() {
    if (literalTypeCase_ == 7) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int FLOAT_FIELD_NUMBER = 10;
  /**
   * <code>float float = 10;</code>
   * @return Whether the float field is set.
   */
  @java.lang.Override
  public boolean hasFloat() {
    return literalTypeCase_ == 10;
  }
  /**
   * <code>float float = 10;</code>
   * @return The float.
   */
  @java.lang.Override
  public float getFloat() {
    if (literalTypeCase_ == 10) {
      return (java.lang.Float) literalType_;
    }
    return 0F;
  }
  /**
   * <code>float float = 10;</code>
   * @param value The float to set.
   */
  private void setFloat(float value) {
    literalTypeCase_ = 10;
    literalType_ = value;
  }
  /**
   * <code>float float = 10;</code>
   */
  private void clearFloat() {
    if (literalTypeCase_ == 10) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int DOUBLE_FIELD_NUMBER = 11;
  /**
   * <code>double double = 11;</code>
   * @return Whether the double field is set.
   */
  @java.lang.Override
  public boolean hasDouble() {
    return literalTypeCase_ == 11;
  }
  /**
   * <code>double double = 11;</code>
   * @return The double.
   */
  @java.lang.Override
  public double getDouble() {
    if (literalTypeCase_ == 11) {
      return (java.lang.Double) literalType_;
    }
    return 0D;
  }
  /**
   * <code>double double = 11;</code>
   * @param value The double to set.
   */
  private void setDouble(double value) {
    literalTypeCase_ = 11;
    literalType_ = value;
  }
  /**
   * <code>double double = 11;</code>
   */
  private void clearDouble() {
    if (literalTypeCase_ == 11) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int DECIMAL_FIELD_NUMBER = 12;
  /**
   * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
   */
  @java.lang.Override
  public boolean hasDecimal() {
    return literalTypeCase_ == 12;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
   */
  @java.lang.Override
  public co.gaffe.proto.Literal.Decimal getDecimal() {
    if (literalTypeCase_ == 12) {
       return (co.gaffe.proto.Literal.Decimal) literalType_;
    }
    return co.gaffe.proto.Literal.Decimal.getDefaultInstance();
  }
  /**
   * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
   */
  private void setDecimal(co.gaffe.proto.Literal.Decimal value) {
    value.getClass();
  literalType_ = value;
    literalTypeCase_ = 12;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
   */
  private void mergeDecimal(co.gaffe.proto.Literal.Decimal value) {
    value.getClass();
  if (literalTypeCase_ == 12 &&
        literalType_ != co.gaffe.proto.Literal.Decimal.getDefaultInstance()) {
      literalType_ = co.gaffe.proto.Literal.Decimal.newBuilder((co.gaffe.proto.Literal.Decimal) literalType_)
          .mergeFrom(value).buildPartial();
    } else {
      literalType_ = value;
    }
    literalTypeCase_ = 12;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
   */
  private void clearDecimal() {
    if (literalTypeCase_ == 12) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int STRING_FIELD_NUMBER = 13;
  /**
   * <code>string string = 13;</code>
   * @return Whether the string field is set.
   */
  @java.lang.Override
  public boolean hasString() {
    return literalTypeCase_ == 13;
  }
  /**
   * <code>string string = 13;</code>
   * @return The string.
   */
  @java.lang.Override
  public java.lang.String getString() {
    java.lang.String ref = "";
    if (literalTypeCase_ == 13) {
      ref = (java.lang.String) literalType_;
    }
    return ref;
  }
  /**
   * <code>string string = 13;</code>
   * @return The bytes for string.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStringBytes() {
    java.lang.String ref = "";
    if (literalTypeCase_ == 13) {
      ref = (java.lang.String) literalType_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <code>string string = 13;</code>
   * @param value The string to set.
   */
  private void setString(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  literalTypeCase_ = 13;
    literalType_ = value;
  }
  /**
   * <code>string string = 13;</code>
   */
  private void clearString() {
    if (literalTypeCase_ == 13) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }
  /**
   * <code>string string = 13;</code>
   * @param value The bytes for string to set.
   */
  private void setStringBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    literalType_ = value.toStringUtf8();
    literalTypeCase_ = 13;
  }

  public static final int DATE_FIELD_NUMBER = 16;
  /**
   * <pre>
   * Date in units of days since the UNIX epoch.
   * </pre>
   *
   * <code>int32 date = 16;</code>
   * @return Whether the date field is set.
   */
  @java.lang.Override
  public boolean hasDate() {
    return literalTypeCase_ == 16;
  }
  /**
   * <pre>
   * Date in units of days since the UNIX epoch.
   * </pre>
   *
   * <code>int32 date = 16;</code>
   * @return The date.
   */
  @java.lang.Override
  public int getDate() {
    if (literalTypeCase_ == 16) {
      return (java.lang.Integer) literalType_;
    }
    return 0;
  }
  /**
   * <pre>
   * Date in units of days since the UNIX epoch.
   * </pre>
   *
   * <code>int32 date = 16;</code>
   * @param value The date to set.
   */
  private void setDate(int value) {
    literalTypeCase_ = 16;
    literalType_ = value;
  }
  /**
   * <pre>
   * Date in units of days since the UNIX epoch.
   * </pre>
   *
   * <code>int32 date = 16;</code>
   */
  private void clearDate() {
    if (literalTypeCase_ == 16) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 17;
  /**
   * <pre>
   * Timestamp in units of microseconds since the UNIX epoch.
   * </pre>
   *
   * <code>int64 timestamp = 17;</code>
   * @return Whether the timestamp field is set.
   */
  @java.lang.Override
  public boolean hasTimestamp() {
    return literalTypeCase_ == 17;
  }
  /**
   * <pre>
   * Timestamp in units of microseconds since the UNIX epoch.
   * </pre>
   *
   * <code>int64 timestamp = 17;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public long getTimestamp() {
    if (literalTypeCase_ == 17) {
      return (java.lang.Long) literalType_;
    }
    return 0L;
  }
  /**
   * <pre>
   * Timestamp in units of microseconds since the UNIX epoch.
   * </pre>
   *
   * <code>int64 timestamp = 17;</code>
   * @param value The timestamp to set.
   */
  private void setTimestamp(long value) {
    literalTypeCase_ = 17;
    literalType_ = value;
  }
  /**
   * <pre>
   * Timestamp in units of microseconds since the UNIX epoch.
   * </pre>
   *
   * <code>int64 timestamp = 17;</code>
   */
  private void clearTimestamp() {
    if (literalTypeCase_ == 17) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int TIMESTAMP_NTZ_FIELD_NUMBER = 18;
  /**
   * <pre>
   * Timestamp in units of microseconds since the UNIX epoch (without timezone information).
   * </pre>
   *
   * <code>int64 timestamp_ntz = 18;</code>
   * @return Whether the timestampNtz field is set.
   */
  @java.lang.Override
  public boolean hasTimestampNtz() {
    return literalTypeCase_ == 18;
  }
  /**
   * <pre>
   * Timestamp in units of microseconds since the UNIX epoch (without timezone information).
   * </pre>
   *
   * <code>int64 timestamp_ntz = 18;</code>
   * @return The timestampNtz.
   */
  @java.lang.Override
  public long getTimestampNtz() {
    if (literalTypeCase_ == 18) {
      return (java.lang.Long) literalType_;
    }
    return 0L;
  }
  /**
   * <pre>
   * Timestamp in units of microseconds since the UNIX epoch (without timezone information).
   * </pre>
   *
   * <code>int64 timestamp_ntz = 18;</code>
   * @param value The timestampNtz to set.
   */
  private void setTimestampNtz(long value) {
    literalTypeCase_ = 18;
    literalType_ = value;
  }
  /**
   * <pre>
   * Timestamp in units of microseconds since the UNIX epoch (without timezone information).
   * </pre>
   *
   * <code>int64 timestamp_ntz = 18;</code>
   */
  private void clearTimestampNtz() {
    if (literalTypeCase_ == 18) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int CALENDAR_INTERVAL_FIELD_NUMBER = 19;
  /**
   * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
   */
  @java.lang.Override
  public boolean hasCalendarInterval() {
    return literalTypeCase_ == 19;
  }
  /**
   * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
   */
  @java.lang.Override
  public co.gaffe.proto.Literal.CalendarInterval getCalendarInterval() {
    if (literalTypeCase_ == 19) {
       return (co.gaffe.proto.Literal.CalendarInterval) literalType_;
    }
    return co.gaffe.proto.Literal.CalendarInterval.getDefaultInstance();
  }
  /**
   * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
   */
  private void setCalendarInterval(co.gaffe.proto.Literal.CalendarInterval value) {
    value.getClass();
  literalType_ = value;
    literalTypeCase_ = 19;
  }
  /**
   * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
   */
  private void mergeCalendarInterval(co.gaffe.proto.Literal.CalendarInterval value) {
    value.getClass();
  if (literalTypeCase_ == 19 &&
        literalType_ != co.gaffe.proto.Literal.CalendarInterval.getDefaultInstance()) {
      literalType_ = co.gaffe.proto.Literal.CalendarInterval.newBuilder((co.gaffe.proto.Literal.CalendarInterval) literalType_)
          .mergeFrom(value).buildPartial();
    } else {
      literalType_ = value;
    }
    literalTypeCase_ = 19;
  }
  /**
   * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
   */
  private void clearCalendarInterval() {
    if (literalTypeCase_ == 19) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int YEAR_MONTH_INTERVAL_FIELD_NUMBER = 20;
  /**
   * <code>int32 year_month_interval = 20;</code>
   * @return Whether the yearMonthInterval field is set.
   */
  @java.lang.Override
  public boolean hasYearMonthInterval() {
    return literalTypeCase_ == 20;
  }
  /**
   * <code>int32 year_month_interval = 20;</code>
   * @return The yearMonthInterval.
   */
  @java.lang.Override
  public int getYearMonthInterval() {
    if (literalTypeCase_ == 20) {
      return (java.lang.Integer) literalType_;
    }
    return 0;
  }
  /**
   * <code>int32 year_month_interval = 20;</code>
   * @param value The yearMonthInterval to set.
   */
  private void setYearMonthInterval(int value) {
    literalTypeCase_ = 20;
    literalType_ = value;
  }
  /**
   * <code>int32 year_month_interval = 20;</code>
   */
  private void clearYearMonthInterval() {
    if (literalTypeCase_ == 20) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int DAY_TIME_INTERVAL_FIELD_NUMBER = 21;
  /**
   * <code>int64 day_time_interval = 21;</code>
   * @return Whether the dayTimeInterval field is set.
   */
  @java.lang.Override
  public boolean hasDayTimeInterval() {
    return literalTypeCase_ == 21;
  }
  /**
   * <code>int64 day_time_interval = 21;</code>
   * @return The dayTimeInterval.
   */
  @java.lang.Override
  public long getDayTimeInterval() {
    if (literalTypeCase_ == 21) {
      return (java.lang.Long) literalType_;
    }
    return 0L;
  }
  /**
   * <code>int64 day_time_interval = 21;</code>
   * @param value The dayTimeInterval to set.
   */
  private void setDayTimeInterval(long value) {
    literalTypeCase_ = 21;
    literalType_ = value;
  }
  /**
   * <code>int64 day_time_interval = 21;</code>
   */
  private void clearDayTimeInterval() {
    if (literalTypeCase_ == 21) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int ARRAY_FIELD_NUMBER = 22;
  /**
   * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
   */
  @java.lang.Override
  public boolean hasArray() {
    return literalTypeCase_ == 22;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
   */
  @java.lang.Override
  public co.gaffe.proto.Literal.Array getArray() {
    if (literalTypeCase_ == 22) {
       return (co.gaffe.proto.Literal.Array) literalType_;
    }
    return co.gaffe.proto.Literal.Array.getDefaultInstance();
  }
  /**
   * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
   */
  private void setArray(co.gaffe.proto.Literal.Array value) {
    value.getClass();
  literalType_ = value;
    literalTypeCase_ = 22;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
   */
  private void mergeArray(co.gaffe.proto.Literal.Array value) {
    value.getClass();
  if (literalTypeCase_ == 22 &&
        literalType_ != co.gaffe.proto.Literal.Array.getDefaultInstance()) {
      literalType_ = co.gaffe.proto.Literal.Array.newBuilder((co.gaffe.proto.Literal.Array) literalType_)
          .mergeFrom(value).buildPartial();
    } else {
      literalType_ = value;
    }
    literalTypeCase_ = 22;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
   */
  private void clearArray() {
    if (literalTypeCase_ == 22) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int MAP_FIELD_NUMBER = 23;
  /**
   * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
   */
  @java.lang.Override
  public boolean hasMap() {
    return literalTypeCase_ == 23;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
   */
  @java.lang.Override
  public co.gaffe.proto.Literal.Map getMap() {
    if (literalTypeCase_ == 23) {
       return (co.gaffe.proto.Literal.Map) literalType_;
    }
    return co.gaffe.proto.Literal.Map.getDefaultInstance();
  }
  /**
   * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
   */
  private void setMap(co.gaffe.proto.Literal.Map value) {
    value.getClass();
  literalType_ = value;
    literalTypeCase_ = 23;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
   */
  private void mergeMap(co.gaffe.proto.Literal.Map value) {
    value.getClass();
  if (literalTypeCase_ == 23 &&
        literalType_ != co.gaffe.proto.Literal.Map.getDefaultInstance()) {
      literalType_ = co.gaffe.proto.Literal.Map.newBuilder((co.gaffe.proto.Literal.Map) literalType_)
          .mergeFrom(value).buildPartial();
    } else {
      literalType_ = value;
    }
    literalTypeCase_ = 23;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
   */
  private void clearMap() {
    if (literalTypeCase_ == 23) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static final int STRUCT_FIELD_NUMBER = 24;
  /**
   * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
   */
  @java.lang.Override
  public boolean hasStruct() {
    return literalTypeCase_ == 24;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
   */
  @java.lang.Override
  public co.gaffe.proto.Literal.Struct getStruct() {
    if (literalTypeCase_ == 24) {
       return (co.gaffe.proto.Literal.Struct) literalType_;
    }
    return co.gaffe.proto.Literal.Struct.getDefaultInstance();
  }
  /**
   * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
   */
  private void setStruct(co.gaffe.proto.Literal.Struct value) {
    value.getClass();
  literalType_ = value;
    literalTypeCase_ = 24;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
   */
  private void mergeStruct(co.gaffe.proto.Literal.Struct value) {
    value.getClass();
  if (literalTypeCase_ == 24 &&
        literalType_ != co.gaffe.proto.Literal.Struct.getDefaultInstance()) {
      literalType_ = co.gaffe.proto.Literal.Struct.newBuilder((co.gaffe.proto.Literal.Struct) literalType_)
          .mergeFrom(value).buildPartial();
    } else {
      literalType_ = value;
    }
    literalTypeCase_ = 24;
  }
  /**
   * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
   */
  private void clearStruct() {
    if (literalTypeCase_ == 24) {
      literalTypeCase_ = 0;
      literalType_ = null;
    }
  }

  public static co.gaffe.proto.Literal parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static co.gaffe.proto.Literal parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static co.gaffe.proto.Literal parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static co.gaffe.proto.Literal parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static co.gaffe.proto.Literal parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static co.gaffe.proto.Literal parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static co.gaffe.proto.Literal parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static co.gaffe.proto.Literal parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static co.gaffe.proto.Literal parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static co.gaffe.proto.Literal parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static co.gaffe.proto.Literal parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static co.gaffe.proto.Literal parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(co.gaffe.proto.Literal prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code co.gaffe.proto.Literal}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        co.gaffe.proto.Literal, Builder> implements
      // @@protoc_insertion_point(builder_implements:co.gaffe.proto.Literal)
      co.gaffe.proto.LiteralOrBuilder {
    // Construct using co.gaffe.proto.Literal.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public LiteralTypeCase
        getLiteralTypeCase() {
      return instance.getLiteralTypeCase();
    }

    public Builder clearLiteralType() {
      copyOnWrite();
      instance.clearLiteralType();
      return this;
    }


    /**
     * <code>.co.gaffe.proto.DataType null = 1;</code>
     */
    @java.lang.Override
    public boolean hasNull() {
      return instance.hasNull();
    }
    /**
     * <code>.co.gaffe.proto.DataType null = 1;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.DataType getNull() {
      return instance.getNull();
    }
    /**
     * <code>.co.gaffe.proto.DataType null = 1;</code>
     */
    public Builder setNull(co.gaffe.proto.DataType value) {
      copyOnWrite();
      instance.setNull(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.DataType null = 1;</code>
     */
    public Builder setNull(
        co.gaffe.proto.DataType.Builder builderForValue) {
      copyOnWrite();
      instance.setNull(builderForValue.build());
      return this;
    }
    /**
     * <code>.co.gaffe.proto.DataType null = 1;</code>
     */
    public Builder mergeNull(co.gaffe.proto.DataType value) {
      copyOnWrite();
      instance.mergeNull(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.DataType null = 1;</code>
     */
    public Builder clearNull() {
      copyOnWrite();
      instance.clearNull();
      return this;
    }

    /**
     * <code>bytes binary = 2;</code>
     * @return Whether the binary field is set.
     */
    @java.lang.Override
    public boolean hasBinary() {
      return instance.hasBinary();
    }
    /**
     * <code>bytes binary = 2;</code>
     * @return The binary.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBinary() {
      return instance.getBinary();
    }
    /**
     * <code>bytes binary = 2;</code>
     * @param value The binary to set.
     * @return This builder for chaining.
     */
    public Builder setBinary(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBinary(value);
      return this;
    }
    /**
     * <code>bytes binary = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBinary() {
      copyOnWrite();
      instance.clearBinary();
      return this;
    }

    /**
     * <code>bool boolean = 3;</code>
     * @return Whether the boolean field is set.
     */
    @java.lang.Override
    public boolean hasBoolean() {
      return instance.hasBoolean();
    }
    /**
     * <code>bool boolean = 3;</code>
     * @return The boolean.
     */
    @java.lang.Override
    public boolean getBoolean() {
      return instance.getBoolean();
    }
    /**
     * <code>bool boolean = 3;</code>
     * @param value The boolean to set.
     * @return This builder for chaining.
     */
    public Builder setBoolean(boolean value) {
      copyOnWrite();
      instance.setBoolean(value);
      return this;
    }
    /**
     * <code>bool boolean = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearBoolean() {
      copyOnWrite();
      instance.clearBoolean();
      return this;
    }

    /**
     * <code>int32 byte = 4;</code>
     * @return Whether the byte field is set.
     */
    @java.lang.Override
    public boolean hasByte() {
      return instance.hasByte();
    }
    /**
     * <code>int32 byte = 4;</code>
     * @return The byte.
     */
    @java.lang.Override
    public int getByte() {
      return instance.getByte();
    }
    /**
     * <code>int32 byte = 4;</code>
     * @param value The byte to set.
     * @return This builder for chaining.
     */
    public Builder setByte(int value) {
      copyOnWrite();
      instance.setByte(value);
      return this;
    }
    /**
     * <code>int32 byte = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearByte() {
      copyOnWrite();
      instance.clearByte();
      return this;
    }

    /**
     * <code>int32 short = 5;</code>
     * @return Whether the short field is set.
     */
    @java.lang.Override
    public boolean hasShort() {
      return instance.hasShort();
    }
    /**
     * <code>int32 short = 5;</code>
     * @return The short.
     */
    @java.lang.Override
    public int getShort() {
      return instance.getShort();
    }
    /**
     * <code>int32 short = 5;</code>
     * @param value The short to set.
     * @return This builder for chaining.
     */
    public Builder setShort(int value) {
      copyOnWrite();
      instance.setShort(value);
      return this;
    }
    /**
     * <code>int32 short = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearShort() {
      copyOnWrite();
      instance.clearShort();
      return this;
    }

    /**
     * <code>int32 integer = 6;</code>
     * @return Whether the integer field is set.
     */
    @java.lang.Override
    public boolean hasInteger() {
      return instance.hasInteger();
    }
    /**
     * <code>int32 integer = 6;</code>
     * @return The integer.
     */
    @java.lang.Override
    public int getInteger() {
      return instance.getInteger();
    }
    /**
     * <code>int32 integer = 6;</code>
     * @param value The integer to set.
     * @return This builder for chaining.
     */
    public Builder setInteger(int value) {
      copyOnWrite();
      instance.setInteger(value);
      return this;
    }
    /**
     * <code>int32 integer = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearInteger() {
      copyOnWrite();
      instance.clearInteger();
      return this;
    }

    /**
     * <code>int64 long = 7;</code>
     * @return Whether the long field is set.
     */
    @java.lang.Override
    public boolean hasLong() {
      return instance.hasLong();
    }
    /**
     * <code>int64 long = 7;</code>
     * @return The long.
     */
    @java.lang.Override
    public long getLong() {
      return instance.getLong();
    }
    /**
     * <code>int64 long = 7;</code>
     * @param value The long to set.
     * @return This builder for chaining.
     */
    public Builder setLong(long value) {
      copyOnWrite();
      instance.setLong(value);
      return this;
    }
    /**
     * <code>int64 long = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearLong() {
      copyOnWrite();
      instance.clearLong();
      return this;
    }

    /**
     * <code>float float = 10;</code>
     * @return Whether the float field is set.
     */
    @java.lang.Override
    public boolean hasFloat() {
      return instance.hasFloat();
    }
    /**
     * <code>float float = 10;</code>
     * @return The float.
     */
    @java.lang.Override
    public float getFloat() {
      return instance.getFloat();
    }
    /**
     * <code>float float = 10;</code>
     * @param value The float to set.
     * @return This builder for chaining.
     */
    public Builder setFloat(float value) {
      copyOnWrite();
      instance.setFloat(value);
      return this;
    }
    /**
     * <code>float float = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearFloat() {
      copyOnWrite();
      instance.clearFloat();
      return this;
    }

    /**
     * <code>double double = 11;</code>
     * @return Whether the double field is set.
     */
    @java.lang.Override
    public boolean hasDouble() {
      return instance.hasDouble();
    }
    /**
     * <code>double double = 11;</code>
     * @return The double.
     */
    @java.lang.Override
    public double getDouble() {
      return instance.getDouble();
    }
    /**
     * <code>double double = 11;</code>
     * @param value The double to set.
     * @return This builder for chaining.
     */
    public Builder setDouble(double value) {
      copyOnWrite();
      instance.setDouble(value);
      return this;
    }
    /**
     * <code>double double = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearDouble() {
      copyOnWrite();
      instance.clearDouble();
      return this;
    }

    /**
     * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
     */
    @java.lang.Override
    public boolean hasDecimal() {
      return instance.hasDecimal();
    }
    /**
     * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal.Decimal getDecimal() {
      return instance.getDecimal();
    }
    /**
     * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
     */
    public Builder setDecimal(co.gaffe.proto.Literal.Decimal value) {
      copyOnWrite();
      instance.setDecimal(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
     */
    public Builder setDecimal(
        co.gaffe.proto.Literal.Decimal.Builder builderForValue) {
      copyOnWrite();
      instance.setDecimal(builderForValue.build());
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
     */
    public Builder mergeDecimal(co.gaffe.proto.Literal.Decimal value) {
      copyOnWrite();
      instance.mergeDecimal(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Decimal decimal = 12;</code>
     */
    public Builder clearDecimal() {
      copyOnWrite();
      instance.clearDecimal();
      return this;
    }

    /**
     * <code>string string = 13;</code>
     * @return Whether the string field is set.
     */
    @java.lang.Override
    public boolean hasString() {
      return instance.hasString();
    }
    /**
     * <code>string string = 13;</code>
     * @return The string.
     */
    @java.lang.Override
    public java.lang.String getString() {
      return instance.getString();
    }
    /**
     * <code>string string = 13;</code>
     * @return The bytes for string.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringBytes() {
      return instance.getStringBytes();
    }
    /**
     * <code>string string = 13;</code>
     * @param value The string to set.
     * @return This builder for chaining.
     */
    public Builder setString(
        java.lang.String value) {
      copyOnWrite();
      instance.setString(value);
      return this;
    }
    /**
     * <code>string string = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearString() {
      copyOnWrite();
      instance.clearString();
      return this;
    }
    /**
     * <code>string string = 13;</code>
     * @param value The bytes for string to set.
     * @return This builder for chaining.
     */
    public Builder setStringBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setStringBytes(value);
      return this;
    }

    /**
     * <pre>
     * Date in units of days since the UNIX epoch.
     * </pre>
     *
     * <code>int32 date = 16;</code>
     * @return Whether the date field is set.
     */
    @java.lang.Override
    public boolean hasDate() {
      return instance.hasDate();
    }
    /**
     * <pre>
     * Date in units of days since the UNIX epoch.
     * </pre>
     *
     * <code>int32 date = 16;</code>
     * @return The date.
     */
    @java.lang.Override
    public int getDate() {
      return instance.getDate();
    }
    /**
     * <pre>
     * Date in units of days since the UNIX epoch.
     * </pre>
     *
     * <code>int32 date = 16;</code>
     * @param value The date to set.
     * @return This builder for chaining.
     */
    public Builder setDate(int value) {
      copyOnWrite();
      instance.setDate(value);
      return this;
    }
    /**
     * <pre>
     * Date in units of days since the UNIX epoch.
     * </pre>
     *
     * <code>int32 date = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearDate() {
      copyOnWrite();
      instance.clearDate();
      return this;
    }

    /**
     * <pre>
     * Timestamp in units of microseconds since the UNIX epoch.
     * </pre>
     *
     * <code>int64 timestamp = 17;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return instance.hasTimestamp();
    }
    /**
     * <pre>
     * Timestamp in units of microseconds since the UNIX epoch.
     * </pre>
     *
     * <code>int64 timestamp = 17;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return instance.getTimestamp();
    }
    /**
     * <pre>
     * Timestamp in units of microseconds since the UNIX epoch.
     * </pre>
     *
     * <code>int64 timestamp = 17;</code>
     * @param value The timestamp to set.
     * @return This builder for chaining.
     */
    public Builder setTimestamp(long value) {
      copyOnWrite();
      instance.setTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * Timestamp in units of microseconds since the UNIX epoch.
     * </pre>
     *
     * <code>int64 timestamp = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestamp() {
      copyOnWrite();
      instance.clearTimestamp();
      return this;
    }

    /**
     * <pre>
     * Timestamp in units of microseconds since the UNIX epoch (without timezone information).
     * </pre>
     *
     * <code>int64 timestamp_ntz = 18;</code>
     * @return Whether the timestampNtz field is set.
     */
    @java.lang.Override
    public boolean hasTimestampNtz() {
      return instance.hasTimestampNtz();
    }
    /**
     * <pre>
     * Timestamp in units of microseconds since the UNIX epoch (without timezone information).
     * </pre>
     *
     * <code>int64 timestamp_ntz = 18;</code>
     * @return The timestampNtz.
     */
    @java.lang.Override
    public long getTimestampNtz() {
      return instance.getTimestampNtz();
    }
    /**
     * <pre>
     * Timestamp in units of microseconds since the UNIX epoch (without timezone information).
     * </pre>
     *
     * <code>int64 timestamp_ntz = 18;</code>
     * @param value The timestampNtz to set.
     * @return This builder for chaining.
     */
    public Builder setTimestampNtz(long value) {
      copyOnWrite();
      instance.setTimestampNtz(value);
      return this;
    }
    /**
     * <pre>
     * Timestamp in units of microseconds since the UNIX epoch (without timezone information).
     * </pre>
     *
     * <code>int64 timestamp_ntz = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimestampNtz() {
      copyOnWrite();
      instance.clearTimestampNtz();
      return this;
    }

    /**
     * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
     */
    @java.lang.Override
    public boolean hasCalendarInterval() {
      return instance.hasCalendarInterval();
    }
    /**
     * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal.CalendarInterval getCalendarInterval() {
      return instance.getCalendarInterval();
    }
    /**
     * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
     */
    public Builder setCalendarInterval(co.gaffe.proto.Literal.CalendarInterval value) {
      copyOnWrite();
      instance.setCalendarInterval(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
     */
    public Builder setCalendarInterval(
        co.gaffe.proto.Literal.CalendarInterval.Builder builderForValue) {
      copyOnWrite();
      instance.setCalendarInterval(builderForValue.build());
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
     */
    public Builder mergeCalendarInterval(co.gaffe.proto.Literal.CalendarInterval value) {
      copyOnWrite();
      instance.mergeCalendarInterval(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.CalendarInterval calendar_interval = 19;</code>
     */
    public Builder clearCalendarInterval() {
      copyOnWrite();
      instance.clearCalendarInterval();
      return this;
    }

    /**
     * <code>int32 year_month_interval = 20;</code>
     * @return Whether the yearMonthInterval field is set.
     */
    @java.lang.Override
    public boolean hasYearMonthInterval() {
      return instance.hasYearMonthInterval();
    }
    /**
     * <code>int32 year_month_interval = 20;</code>
     * @return The yearMonthInterval.
     */
    @java.lang.Override
    public int getYearMonthInterval() {
      return instance.getYearMonthInterval();
    }
    /**
     * <code>int32 year_month_interval = 20;</code>
     * @param value The yearMonthInterval to set.
     * @return This builder for chaining.
     */
    public Builder setYearMonthInterval(int value) {
      copyOnWrite();
      instance.setYearMonthInterval(value);
      return this;
    }
    /**
     * <code>int32 year_month_interval = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearYearMonthInterval() {
      copyOnWrite();
      instance.clearYearMonthInterval();
      return this;
    }

    /**
     * <code>int64 day_time_interval = 21;</code>
     * @return Whether the dayTimeInterval field is set.
     */
    @java.lang.Override
    public boolean hasDayTimeInterval() {
      return instance.hasDayTimeInterval();
    }
    /**
     * <code>int64 day_time_interval = 21;</code>
     * @return The dayTimeInterval.
     */
    @java.lang.Override
    public long getDayTimeInterval() {
      return instance.getDayTimeInterval();
    }
    /**
     * <code>int64 day_time_interval = 21;</code>
     * @param value The dayTimeInterval to set.
     * @return This builder for chaining.
     */
    public Builder setDayTimeInterval(long value) {
      copyOnWrite();
      instance.setDayTimeInterval(value);
      return this;
    }
    /**
     * <code>int64 day_time_interval = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearDayTimeInterval() {
      copyOnWrite();
      instance.clearDayTimeInterval();
      return this;
    }

    /**
     * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
     */
    @java.lang.Override
    public boolean hasArray() {
      return instance.hasArray();
    }
    /**
     * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal.Array getArray() {
      return instance.getArray();
    }
    /**
     * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
     */
    public Builder setArray(co.gaffe.proto.Literal.Array value) {
      copyOnWrite();
      instance.setArray(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
     */
    public Builder setArray(
        co.gaffe.proto.Literal.Array.Builder builderForValue) {
      copyOnWrite();
      instance.setArray(builderForValue.build());
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
     */
    public Builder mergeArray(co.gaffe.proto.Literal.Array value) {
      copyOnWrite();
      instance.mergeArray(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Array array = 22;</code>
     */
    public Builder clearArray() {
      copyOnWrite();
      instance.clearArray();
      return this;
    }

    /**
     * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
     */
    @java.lang.Override
    public boolean hasMap() {
      return instance.hasMap();
    }
    /**
     * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal.Map getMap() {
      return instance.getMap();
    }
    /**
     * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
     */
    public Builder setMap(co.gaffe.proto.Literal.Map value) {
      copyOnWrite();
      instance.setMap(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
     */
    public Builder setMap(
        co.gaffe.proto.Literal.Map.Builder builderForValue) {
      copyOnWrite();
      instance.setMap(builderForValue.build());
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
     */
    public Builder mergeMap(co.gaffe.proto.Literal.Map value) {
      copyOnWrite();
      instance.mergeMap(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Map map = 23;</code>
     */
    public Builder clearMap() {
      copyOnWrite();
      instance.clearMap();
      return this;
    }

    /**
     * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
     */
    @java.lang.Override
    public boolean hasStruct() {
      return instance.hasStruct();
    }
    /**
     * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
     */
    @java.lang.Override
    public co.gaffe.proto.Literal.Struct getStruct() {
      return instance.getStruct();
    }
    /**
     * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
     */
    public Builder setStruct(co.gaffe.proto.Literal.Struct value) {
      copyOnWrite();
      instance.setStruct(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
     */
    public Builder setStruct(
        co.gaffe.proto.Literal.Struct.Builder builderForValue) {
      copyOnWrite();
      instance.setStruct(builderForValue.build());
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
     */
    public Builder mergeStruct(co.gaffe.proto.Literal.Struct value) {
      copyOnWrite();
      instance.mergeStruct(value);
      return this;
    }
    /**
     * <code>.co.gaffe.proto.Literal.Struct struct = 24;</code>
     */
    public Builder clearStruct() {
      copyOnWrite();
      instance.clearStruct();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:co.gaffe.proto.Literal)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new co.gaffe.proto.Literal();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "literalType_",
            "literalTypeCase_",
            co.gaffe.proto.DataType.class,
            co.gaffe.proto.Literal.Decimal.class,
            co.gaffe.proto.Literal.CalendarInterval.class,
            co.gaffe.proto.Literal.Array.class,
            co.gaffe.proto.Literal.Map.class,
            co.gaffe.proto.Literal.Struct.class,
          };
          java.lang.String info =
              "\u0000\u0014\u0001\u0000\u0001\u0018\u0014\u0000\u0000\u0000\u0001<\u0000\u0002=" +
              "\u0000\u0003:\u0000\u00047\u0000\u00057\u0000\u00067\u0000\u00075\u0000\n4\u0000" +
              "\u000b3\u0000\f<\u0000\r\u023b\u0000\u00107\u0000\u00115\u0000\u00125\u0000\u0013" +
              "<\u0000\u00147\u0000\u00155\u0000\u0016<\u0000\u0017<\u0000\u0018<\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<co.gaffe.proto.Literal> parser = PARSER;
        if (parser == null) {
          synchronized (co.gaffe.proto.Literal.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<co.gaffe.proto.Literal>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:co.gaffe.proto.Literal)
  private static final co.gaffe.proto.Literal DEFAULT_INSTANCE;
  static {
    Literal defaultInstance = new Literal();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Literal.class, defaultInstance);
  }

  public static co.gaffe.proto.Literal getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Literal> PARSER;

  public static com.google.protobuf.Parser<Literal> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

